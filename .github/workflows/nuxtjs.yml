name: Build & Deploy Nuxt (Static) to GitHub Pages (root domain)

on:
  push:
    branches:
      - main

permissions:
  contents: read
  pages: write
  id-token: write

env:
  # expose secrets here (set them in Repo → Settings → Secrets → Actions)
  CUSTOM_DOMAIN: ${{ secrets.CUSTOM_DOMAIN }}        # example.com (required if you want CNAME auto)
  CUSTOM_DOMAIN_URL: ${{ secrets.CUSTOM_DOMAIN_URL }} # optional, e.g. https://example.com

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: "nuxt-pages-deploy"
      cancel-in-progress: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node 22
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      - name: Show node/npm versions (debug)
        run: |
          node -v
          npm -v

      - name: Install dependencies
        run: npm ci

      - name: Build - generate static site
        env:
          NODE_OPTIONS: --max-old-space-size=4096
          # set NUXT_PUBLIC_SITE_URL from secret if provided, fallback later in script if only CUSTOM_DOMAIN present
          NUXT_PUBLIC_SITE_URL: ${{ env.CUSTOM_DOMAIN_URL }}
          CUSTOM_DOMAIN: ${{ env.CUSTOM_DOMAIN }}
        run: |
          # fallback to https://$CUSTOM_DOMAIN if CUSTOM_DOMAIN_URL not set but CUSTOM_DOMAIN is set
          if [ -z "$NUXT_PUBLIC_SITE_URL" ] && [ -n "$CUSTOM_DOMAIN" ]; then
            export NUXT_PUBLIC_SITE_URL="https://$CUSTOM_DOMAIN"
            echo "Set NUXT_PUBLIC_SITE_URL to $NUXT_PUBLIC_SITE_URL"
          else
            echo "NUXT_PUBLIC_SITE_URL is $NUXT_PUBLIC_SITE_URL"
          fi

          # generate static site (Nuxt 4)
          npx nuxi generate --no-exit-on-error

      - name: Verify output
        run: |
          echo "Output folder summary:"
          du -sh .output/public || true
          ls -la .output/public | sed -n '1,200p' || true

      - name: Create CNAME (custom domain)
        if: env.CUSTOM_DOMAIN != ''
        run: |
          echo "${{ env.CUSTOM_DOMAIN }}" > .output/public/CNAME
          echo "Created CNAME for: ${{ env.CUSTOM_DOMAIN }}"

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: .output/public

  deploy:
    needs: build-deploy
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v1